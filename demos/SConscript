import os
import sys

env=DefaultEnvironment().Clone()
BIN_DIR=os.environ['BIN_DIR'];

env.Program(os.path.join(BIN_DIR, 'demo_label'), ['label.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_button'), ['button.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_remove'), ['remove_image.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_check_button'), ['check_button.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_radio_button'), ['radio_button.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_clip_view'), ['clip_view.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_dialog'), ['dialog.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_edit'), ['edit.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_edit_blur_destroy'), ['edit_blur_destroy.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_mledit'), ['mledit.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_mledit_auto_focus'), ['mledit_auto_focus.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_mledit_set_text'), ['mledit_set_text.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_image'), ['image.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_gif_image'), ['gif_image.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_svg_image'), ['svg_image.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_rich_text'), ['rich_text.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_slider'), ['slider.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_progress_bar'), ['progress_bar.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_spin_box'), ['spin_box.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_basic'), ['basic.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_combo_box'), ['combo_box.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_combo_box_ex'), ['combo_box_ex.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_canvas'), ['canvas.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_image_animation'), ['image_animation.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_image_value'), ['image_value.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_progress_circle'), ['progress_circle.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_slide_menu'), ['slide_menu.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_slide_view'), ['slide_view.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_switch'), ['switch.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_switch_on_changed'), ['switch_on_changed.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_text_selector'), ['text_selector.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_time_clock'), ['time_clock.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_digit_clock'), ['digit_clock.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_mutable_image'), ['mutable_image.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_multi_windows'), ['multi_windows.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_list_item_visible'), ['list_item_visible.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_widget_created_event'), ['widget_created_event.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'backgroud_lost_focus'), ['backgroud_lost_focus.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_list_item_clone'), ['list_item_clone.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_list_item_click'), ['list_item_click.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_key_event'), ['key_event.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_unload_image'), ['unload_image.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_list_view_dynamic'), ['list_view_dynamic.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_edit_mledit'), ['edit_mledit.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_udp'), ['udp.c', 'udp_settings.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_hscroll_label'), ['hscroll_label.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_wait_cursor'), ['wait_cursor.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_open_close'), ['open_close.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_normal_dialog'), ['normal_dialog.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_modal_dialog'), ['modal_dialog.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_conf_ini'), ['conf_ini.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_conf_json'), ['conf_json.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_conf_ubjson'), ['conf_ubjson.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_vgcanvas_draw_text'), ['vgcanvas_draw_text.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_popup_menu'), ['popup_menu.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_label_chinese'), ['label_chinese.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_inline_style'), ['inline_style.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_async_exec'), ['async_exec.c', 'exec_cmd_async.c', 'assets.c'])
env.Program(os.path.join(BIN_DIR, 'demo_unload_font'), ['unload_font.c', 'assets.c'])


